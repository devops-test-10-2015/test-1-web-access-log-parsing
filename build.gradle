// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'codenarc'
apply plugin: 'application'

ext {
    logstashConfig = "config/logstash-parse-access.conf"
    outputDir = "output"
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'joda-time:joda-time:2.9'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.3"
}

task makeOutputDir() << {
    String outputDirStr = project.getProperty('jsonData').split(File.separator)[0..-2].join(File.separator)
    new File(outputDirStr).mkdirs()
}

task parseLogsWithLogstash (type:Exec, dependsOn: ['makeOutputDir'], description: "Parse Apache access logs using Logstash. Supply the path to the log with -PapacheLog.") {
    commandLine "logstash", "-f", logstashConfig
    doFirst {
        String apacheLogFileName = project.getProperty('apacheLog')
        standardInput = new FileInputStream(file(apacheLogFileName))
        standardOutput = new FileOutputStream(file(project.getProperty('jsonData')))
    }

}

mainClassName = 'org.kevinhcross.tools.ParseApacheLogJson'

task createAccessLogReport(type: JavaExec, dependsOn: ['parseLogsWithLogstash']) {
    description 'Run the Groovy script to parse the logs. You can supply a -PjsonData property with the path to the json data'
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    args project.getProperty('jsonData')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
